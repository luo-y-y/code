package $data.getPackageName();
#parse("common.vm")
#set($name = $data.getClassName())
#set($aliasName = $data.getClassAliasName())

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.context.annotation.Scope;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;

import com.cat.common.bean.EMsg;
import com.cat.common.bean.FMsgResponse;
import com.cat.common.bean.PageControlInfo;
import com.cat.common.lang.RString;
import com.cat.common.reflect.RReflectUtils;
import com.config.action.BaseAction;

@RequestMapping("$data.getRequestMappingPath()")
@RestController
@Scope("prototype")
public class ${name}$sfxAction extends BaseAction{
   
   @Autowired
   private $name$sfxService $aliasName$sfxService;
   

   /**
    * 保存/更新
    */
   @RequestMapping("doSave")
   public FMsgResponse doSave(){
        boolean f = false;
        String id = getRequestParameter("${tableBean.getPkeyFirstLower()}");
        $name entity = new $name();
        RReflectUtils.getObjectForMap(entity, params);
        if (RString.isBlank(id) || id.equals("0")) {
        Integer r = ${aliasName}${sfxService}.save(entity);
           if(r > 0){
             f = true;
           }
        }else{
           f  = ${aliasName}${sfxService}.update(entity);
         }
        if (f) {
            return new FMsgResponse(EMsg.Success);
        }
        return new FMsgResponse(EMsg.Fail);  
    }

    /**
    * 删除
    */
     @RequestMapping("doDelete")
     public FMsgResponse doDelete() {
        boolean f = false;
        String ids = getRequestParameter("ids");
        if (RString.isBlank(ids)) {
           return new FMsgResponse(EMsg.Param_NotFount);
        }
        String[] values = RString.split(ids, ",");
        if (values.length > 1) {
           f = ${aliasName}${sfxService}.deleteByIds(ids);
        } else {
             f = ${aliasName}${sfxService}.delete(Integer.parseInt(ids));
        }
       
        if (f) {
               return new FMsgResponse(EMsg.Success);
        }
        return new FMsgResponse(EMsg.Fail);  
   }
   
   /**
    * 根据ID加载记录
    */
   @RequestMapping("load")
   public FMsgResponse load(){
      String id = getRequestParameter("${tableBean.getPkeyFirstLower()}");
       if(RString.isBlank(id)) {
             return new FMsgResponse(EMsg.Param_NotFount);
       }
      $name entity = ${aliasName}${sfxService}.load(Integer.parseInt(id));
      return new FMsgResponse(EMsg.Success, entity);
   }
   
    /**
     * 分页查询
     */
    @RequestMapping("findPageList")
    public FMsgResponse findPageList() {
        String page = getRequestParameter("page");
        String rows = getRequestParameter("rows");
        Integer p = 1;
        Integer r = 20;
        try {
            p = Integer.parseInt(page);
            r = Integer.parseInt(rows);
        } catch (Exception e) {
        }
        $name entity = new $name();
        RReflectUtils.getObjectForMap(entity, params);
        PageControlInfo pageInfo = ${aliasName}${sfxService}.findPageList(entity,p, r, null);
        return new FMsgResponse(EMsg.Success,pageInfo);
    }
     
}
